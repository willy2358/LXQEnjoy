<!--terms: round, circle --->
<game name="shengji">
  
  <round_attrs>
    <!--不亮底牌-->
    
    <round_attr name="cur_level" value_type="int" init_value="2"/>
    <round_attr name="defenders" value_type="list" init_value="none"/>
    <round_attr name="attacters" value_type="list" init_value="none"/>

    <!--庄牌点数-->
    <round_attr name="bank_cfigure" value_type="int" init_value="2"/>

    <!--庄牌花色-->
    <round_attr name="bank_ctype" value_type="string" init_value="none"/>

    <!--起牌玩家，第一个摸牌的人-->
    <round_attr name="init_player" value_type="Player" init_value="random"/>

  </round_attrs>

  <cards type="M/P">
    <!--去牌-->
    <excludes>
      <exclude></exclude>
      <exclude></exclude>
    </excludes>

    <dipai count="6" public_shown="false"/>

    <!--分数牌-->
    <score_cards>
      <score_card cfigure="5" score="5"/>
      <score_card cgigure="10" score="10"/>
      <score_card cfigure="13" score="10">
    </score_cards>
    <!--牌型，如有对同一牌型不同的配置，后面的覆盖前面的 power_range 属性为方便配置参考，无代码执行影响  
       leading 是否可作为起始牌，默认为true, 可以由一圈的起始打牌人打出, false,只能用于跟牌
    -->
    <patterns>
      
      <!--单牌-->
      <static_power>    
        <single cfigure="1" power="14"/>
        <single cfigure="2" power="2" />
        <single cfigure="3" power="3" />
        <single cfigure="4" power="4" />
        <single cfigure="5" power="5" />
        <single cfigure="6" power="6" />
        <single cfigure="7" power="7" />
        <single cfigure="8" power="8" />
        <single cfigure="9" power="9" />
        <single cfigure="10" power="10" />
        <single cfigure="11" power="11" />
        <single cfigure="12" power="12" />
        <single cfigure="13" power="13" />

        <single cfigure="JM" power="50" power_range="50"/>
        <single cfigure="JS" power="51" power_range="51"/>
      </static_power>

      <runtime_power>
        <!--主牌-->
        <single >
          <!--主牌花色牌-->
          <case testee="card" ctype_of="card" ret_as=":(round.bank_ctype)">
            <set property="power" value=":((cfigure_of(card)) + 20)" power_range="21-33"/>
          </case>
          <!--主牌数字牌-->
          <case cfigure_of="card" ret_as=":(round.bank_cfigure)">
            <set property="power" value="35" />
          </case>
          <!--正主牌-->
          <cases>
            <case ctype_of="card" ret_as=":(round.bank_ctype)"/>
            <case cfigure_of="card" ret_as=":(round.bank_cfigure)"/>
            <set property="power" value="36"/>
          </cases>
        </single>

        <!--四张-->
        <quad testee="cards" name="zha" power=":((max_cfigure_of(cards)) + 5)" range="6-18"/>
        
        <!--四张的跟牌-->
        <comp name="zha_follow" leading="false" params="x,y,z,u">
          <!--非枪毙牌，最小-->
          <case ctype_count_of="cards" ret_not_is="1">
            <set property="power" value="0"/>
          </case>
          <!--枪毙牌，大过四张牌, 前提是手中已没有其他花牌-->
          <cases>
            <case ctype_count_of="cards" ret_is="1"/> 
            <case ctype_of="cards[0]" ret_as=":(round.bank_ctype)"/>
            <set property="power" value=":(max_power_of(cards))"/>
          </cases>
        </comp>

        <!--甩牌-->
        <same_ctype name="shuai" power=":(max_power_of(cards))">
          <cases>
            <!--大于一张牌-->
            <case count_of="cards" ret_gt="1"/>
            <!--不能有主牌数字-->
            <case cards_contain_cfigure_as="cards,:(round.bank_cfigure)" ret_not_is="true"/> 
            <!--都是大牌-->
            <case min_cfigure_of="cards" ret_gt_as=":(cards_in_other_players_hnad|cards_of_ctype(ctype_of(cards[0]))|max_cfigure)"/>
            <set property="leading" value="true"/>
          </cases>   
        </same_ctype>

        <!--甩牌跟牌-->
        <comp name="shuai_follow" params="x|y" leading="false">  
          <!--非枪毙牌，最小-->
          <case is_all_ctype_as=":(round.bank_ctype)" ret_not_is="false">
            <set property="power" value="0"/>
          </case>
          <!--枪毙牌，大过四张牌, 前提是手中已没有其他花牌-->
          <case is_all_ctype_as=":(round.bank_ctype)" ret_not_is="true">
            <set property="power" value=":(max_power_of(cards))"/>
          </case>
        </comp>
      </runtime_power>
    </patterns>

  </cards>

  <!--跟牌规则：
  是否跟牌：
  1. 必须出牌
    牌型要求
      无相同牌型的处理
      与起牌人的牌型相同
      与上家的牌型相同
    牌张要求
  2. 大才出牌

  pattern_ref_as=":(circle_init_player)"
  pattern_ref_as=":(prev_player)"
  --->
  <following must_follow="true" 
             pattern_ref_as=":(circle_init_player)">    
    
    <leading pattern_type="single">
      <case player_has_cards_of_ctype_as="card">
        <following_cards ctype_as="card" count="1"/>
      </case>
      <case player_not_has_cards_of_ctype_as="card">
        <following_cards ctype_of="any" count="1"/>
      </case>
    </leading>

    <leading pattern_name="zha">
      <case player_has_cards_of_pattern="zha">
        <following_cards pattern_name="zha"/>
      </case>
      <case player_not_has_cards_of_pattern="zha">
        <following_cards>
          <card>
             <case player_has_cards_of_ctype="club">
              <card_type ctype_of="club"/>
             </case>
             <case player_not_has_cards_of_ctype="club">
              <card_type ctype_of="any">
             </case>
          </card>
          <card>
             <case player_has_cards_of_ctype="diamond">
              <card_type ctype_of="diamond"/>
             </case>
             <case player_not_has_cards_of_ctype="diamond">
              <card_type ctype_of="any">
             </case>
          </card>
          <card>
             <case player_has_cards_of_ctype="heart">
              <card_type ctype_of="heart"/>
             </case>
             <case player_not_has_cards_of_ctype="heart">
              <card_type ctype_of="any">
             </case>
          </card>
          <card>
             <case player_has_cards_of_ctype="spade">
              <card_type ctype_of="spade"/>
             </case>
             <case player_not_has_cards_of_ctype="spade">
              <card_type ctype_of="any">
             </case>
          </card>
        </following_cards>
      </case>
    </leading>

    <leading pattern_name="shuai">
      <following_cards cards=":(get_cards_of_ctype_as(cards[0], count_of(cards), any_ctype)"/>
    </leading>

  </following>

  <!--玩家-->
  <players>
    <player_role name="defender" text="defender"/>
    <player_role name="attacter" text="attacter"/>

    <player_attr name="level" value_type="int"/>
    <player_attr name="IsMainPlayer" value_type="bool"/>
    <player_attr name="IsAttacter" value_type="bool"/>
    <player_attr name="IsDefender" value_type="bool"/>
    <player_attr name="sum_score" value_type="int"/>
    <player_attr name="Score" value_type="int"/>
    <min>4</min>
    <max>4</max>
  
  </players>

  <!--一圈的赢家-->
  <circle_winner>
    <!-- <cards_power decided_by="least_power_card"/> -->

    <!--通常情况下是出最大牌的player-->
    <winner test_greatest_power="true">
    </winner>
    
    <!--进攻方赢，得到分数牌, cards，一圈打出的牌-->
    <case testee="cards" cards_contain_cfigure_as=":(score_card)">
      <circle_winner>
        <case property="IsAttacter" ret_is="true">
          <find_player property="IsAttacter" ret_is="true"> 
            <update property="score" operation="add" value="card_score"/>
          </find_player>
        </case>
      </circle_winner>
    </case>
   
  </circle_winner>

  <!---最后圈输赢测试 如果attacter win, attacter将获得底牌的分数--->
  <test_last_circle>
    
  </test_last_circle>


  <!--轮的赢家-->
  <round_winners>
    <!--确定输赢方-->
    <find_player property="IsAttacter" ret_is="true">
      <!--进攻方分数为0，防守方赢，升2级-->
      <case property="Score" ret_is="0">
        <winners>
          <find_player property="IsDefender" ret_is="true"/>
        </winnrs>
        <losers>
          <find_player property="IsAttacter" ret_is="true"/>
        </losers>
        <find_player property="IsDefender" ret_is="true"/>
          <update property="level" operation="inc" value="2"/>
        </find_player>

         <!--防守方赢，主打换人-->
        <find_player>
          <case property="IsDefender" ret_is="true"/>
          <case property="IsMainPlayer" ret_is="true">
          <update property="IsMainPlayer" value="false"/>
        </find_player>
        <find_player>
          <case property="IsDefender" ret_is="true"/>
          <case property="IsMainPlayer" ret_is="false">
          <update property="IsMainPlayer" value="true"/>
        </find_player>
      </case>
      <!--进攻方没分数<40，防守方赢，升一级-->
      <case property="Score" ret_lt="40">
        <winners>
          <find_player property="IsDefender" ret_is="true"/>
        </winnrs>
        <losers>
          <find_player property="IsAttacter" ret_is="true"/>
        </losers>
        <find_player property="IsDefender" ret_is="true">
          <update property="level" operation="inc" value="1"/>
        </find_player>

        <find_player>
          <case property="IsDefender" ret_is="true"/>
          <case property="IsMainPlayer" ret_is="true">
          <update property="IsMainPlayer" value="false"/>
        </find_player>
        <find_player>
          <case property="IsDefender" ret_is="true"/>
          <case property="IsMainPlayer" ret_is="false">
          <update property="IsMainPlayer" value="true"/>
        </find_player>
      </case>

      <!--进攻方分数40<x<80，进攻方赢，升一级-->
      <case property="Score" ret_lt="80">
        <winners>
          <find_player property="IsAttacter" ret_is="true"/>
        </winnrs>
        <losers>
          <find_player property="IsDefender" ret_is="true"/>
        </losers>
        <find_player property="IsAttacter" ret_is="true">
          <update property="level" operation="inc" value="1"/>
        </find_player>
        <!--进攻方赢，攻守角色互换，本轮主打的下家为主打（主防守）-->
        <find_player var="p1" property="IsMainPlayer" ret_is="true">
          <find_player property="seatid" ret_as=":(p1.seatid+1)">
            <update property="IsMainPlayer" value="true">
          </find_player>
        </find_player>

        <find_player property="IsDefender" ret_is="true">        
          <update property="IsDefender" value="false"/>
          <update property="IsAttacter" value="true">
        </find_player>
        <find_player property="IsAttacter" ret_is="true">        
          <update property="IsDefender" value="true"/>
          <update property="IsAttacter" value="false">
        </find_player>

      </case>

      <!--进攻方分数>80，进攻方赢，升2级-->
      <case property="Score" ret_gt="80">
        <winners>
          <find_player property="IsAttacter" ret_is="true"/>
        </winnrs>
        <losers>
          <find_player property="IsDefender" ret_is="true"/>
        </losers>
        <find_player property="IsAttacter" ret_is="true">
          <update property="level" operation="inc" value="2"/>
        </find_player>

        <!--进攻方赢，攻守角色互换，本轮主打的下家为主打（主防守）-->
        <find_player var="p1" property="IsMainPlayer" ret_is="true">
          <find_player property="seatid" ret_as=":(p1.seatid+1)">
            <update property="IsMainPlayer" value="true">
          </find_player>
        </find_player>

        <find_player property="IsDefender" ret_is="true">        
          <update property="IsDefender" value="false"/>
          <update property="IsAttacter" value="true">
        </find_player>
        <find_player property="IsAttacter" ret_is="true">        
          <update property="IsDefender" value="true"/>
          <update property="IsAttacter" value="false">
        </find_player>
      </case>
    </find_player>

    <!--一轮结束，更新各玩家状态-->
  </round_winners>

  <running>

    <!--发牌（摸牌，起牌）-->
    <!--每次一张牌-->
    <dealcard_loop start_player=":(init_player)" card_number_per_time="1">
    <!--底牌6张-->
      
      <case  cards_coount_not_deal="6">
        <stoploop/>
      </case>

      <!--摸到将牌，可以叫主，前提是还没主-->
      <case testee="card" cfigure_of="card" ret_as=":(cur_level)">
        <case testee="round" property="bank_ctype" ret_is="none">
           <actions timeout_seconds="30" timeout_def_act="pass" to_player="pp" wait_until_player_response="true"> 
            <action act_ref="jiaozhu"/>
            <action act_ref="pass"/>
          </actions>
        </case>
      </case>
    </dealcard_loop>

    <!--发牌结束，必须有防守方，否则流局，此情况只发生刚开始的几局-->
    <continue_must_test>
      <case testee="round" property="defenders" ret_is="none">
        <action act_ref="liuju"/>
      </case>
    </continue_must_test>

    <!--底牌归于主打-->
    <find_player roperty="IsMainPlayer" ret_is="true">
      <deal_table_cards/>
    </find_player>

    <!--等待主打扣牌-->
    <find_player property="IsMainPlayer" ret_is="true">
      <actions timeout_seconds="30" timeout_def_act="force_koupai" wait_until_player_response="true" >
        <action act_ref="koupai"/>
        <action act_ref="force_koupai"/>
      </actions>
    </find_player>


    <!--进入打牌，从主打开始-->
    <playcard_loop>
      <start_player>
        <find_player property="IsMainPlayer" ret_is="true"/>
      </start_player>

      <!--每玩家的命令列表，出牌，如超时，强制出牌-->
      <actions timeout_seconds="30" timeout_def_act="force_chupai" wait_until_player_response="true">
          <action act_ref="playcard"/>
          <action act_ref="force_chupai"/>
      </actions>

      <wait_play_cards/>

      <!--一局结束，主打手里没牌-->
      <case>
        <find_player property="IsMainPlayer" ret_is="true">
          <case property=":(cards_count_in_player_hand)" ret_is="0">
            <stoploop/>
          </case>
        </find_player>
      </case>
    </playcard_loop>
  
    <!--出牌结束，确定一局输赢玩家-->
    <tell_round_winners/>

    <!--广播一局胜负-->
    <publish_round_winners_losers/>

    <!--广播累积胜负-->
    <publish_total_scores/>
  </running>

  <!--玩家操作命令列表-->
  <actions>
    <!--叫主-->
    <action name="jiaozhu">
      <!-- <consequences for_round0="1"></consequences>
      <consequences for_roundX="1"></consequences> -->
      <update_round property="jiangpai" value="card">
      </update_round>
      <update_card_power>
        <cards_of_type operation="add" value="+20">
        <exe_card power="45">
        <cards_of_figure power="40">
      </update_card_power>

    </action>
    <action name="liuju">
      <finish_round/>
      <publish_players message=""/>
      <new_round/>
    </action>

    <!-- <aciton name="peng" text="peng">
      <update_round property="next_player" value="act_exe_player"/>
    </action> -->

    <action name="pass" text="pass">
      <consequences></consequences>
    </action>>
    <action name="koupai" text="koupai">
    </action>
    <action name="chupai" text="chupai">
    </action>
    <action name="force_chupai">
    </force_chupai>
    <action name="force_koupai" text="none" >
       <consequences>
         <consequences>
            <random_pick_cards number="6" as="di"/>
            <play_cards_to_table cards="di">
         </consequences>
       </consequences>
    </action>
  </actions>
</game>